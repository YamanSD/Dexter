<!DOCTYPE html>
<html data-bs-theme="dark" lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="Free and open-source online code editor that allows you to write and execute code from a rich set of languages.">
    <meta name="keywords" content="online editor, online code editor, online ide, online compiler, online interpreter, run code online, learn programming online,
            online debugger, programming in browser , online code runner, online code execution, debug online, debug C code online, debug C++ code online,
            programming online, snippet, snippets, code snippet, code snippets, pastebin, execute code, programming in browser, run c online, run C++ online,
            run java online, run python online, run ruby online, run c# online, run rust online, run pascal online, run basic online">
    <meta name="author" content="mysd">
    <meta property="og:title" content="Dexter - online compiler based on Docker">
    <meta property="og:description" content="Free and open-source online code editor that allows you to write and execute code from a rich set of languages.">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/split.js/1.6.0/split.min.js"></script>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.js"></script>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.js"></script>
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.7/css/jquery.dataTables.css" />

    <script src="https://cdn.datatables.net/1.13.7/js/jquery.dataTables.js"></script>
    <link href="https://fonts.googleapis.com/css?family=Exo+2" rel="stylesheet">
    <script src="https://unpkg.com/monaco-editor@latest/min/vs/loader.js"></script>

    <title>Dexter - Users</title>
    <link rel="shortcut icon" href="../favicon.svg" type="image/svg">
    <link rel="icon" href="../favicon.svg" type="image/svg">

    <!-- Linked by express, ignore warning -->
    <link rel="stylesheet" href="../css/style.css" type="text/css">

    <script>
        let isAdmin = false;
        let isSuper = false;

        fetch("/api/users/userData", {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': localStorage.getItem("token")
            }
        }).then(r => {
            r.json()
                .then(
                    info => {
                        isAdmin = info.user.is_admin;
                        isSuper = info.user.is_super;

                        if (!isAdmin) {
                            window.location.href = "/";
                        }
                    });
        }).catch();
    </script>
</head>
<body class="container-fluid bg-black p-0">
    <div class="confirm vw-100"></div>

    <!-- Error toast -->
    <div class="toast err-toast text-primary" role="alert" style="z-index: 1000">
        <div class="toast-header justify-content-between">
            <div class="d-flex flex-row">
                <i class="bi bi-info-circle text-primary"></i>
                <strong class="ms-2 text-primary">Info</strong>
            </div>
            <button type="button"
                    class="ml-2 mb-1 close"
                    data-dismiss="toast"
                    aria-label="Close"
                    style="border-radius: 5px;"
                    onclick="hideToast()"
            >
                <span class="fw-bold" aria-hidden="true">X</span>
            </button>
        </div>
        <div id="err_toast_msg" class="toast-body">
            Server error
        </div>
    </div>

    <!-- Navbar -->
    <nav class="navbar bg-black w-100 text-white"
         style="position: fixed; min-height: 55px; z-index: 100; border-bottom: 1px solid var(--primary-2);"
    >
        <!-- Static controls -->
        <div class="container-fluid text-white">
            <!-- Go back -->
            <button class="navbar-toggler text-white"
                    type="button"
                    data-bs-toggle="collapse"
                    data-bs-target="#navbarNavAltMarkup"
                    aria-controls="navbarNavAltMarkup"
                    aria-expanded="false"
                    onclick="window.history.go(-1);"
                    aria-label="Toggle navigation">
                <span class="bi-chevron-left" style="font-size: 25px;"></span>
            </button>
            <!-- Add user -->
            <button class="navbar-toggler text-white"
                    type="button"
                    data-bs-toggle="collapse"
                    data-bs-target="#navbarNavAltMarkup"
                    aria-controls="navbarNavAltMarkup"
                    aria-expanded="false"
                    onclick="addUser()"
                    aria-label="Toggle navigation">
                <span class="bi bi-person-plus-fill" style="font-size: 22px;">
                </span>
            </button>
        </div>
    </nav>

    <div class="w-100 bg-dark p-3 overflow-y-scroll overflow-x-hidden"
         style="top: 55px; border: 3px solid var(--primary-1); color: white; height: calc(100% - 55px); position: absolute;">
        <table id="table"
               class="display"
               style="width: 100%; height: 100%;"></table>
    </div>
    <script>
        function getMemUnit(value) {
            value = parseInt(value);

            const scale = Math.floor(Math.log10(value)) + 1;

            if (scale < 3) {
                return `${value} B`;
            } else if (scale < 6) {
                return `${(value / 1_000).toFixed(3)}\tKB`;
            } else if (scale < 9) {
                return `${(value / 1_000_000).toFixed(3)}\tMB`;
            } else if (scale < 12) {
                return `${(value / 1_000_000_000).toFixed(3)}\tGB`;
            } else {
                return `${(value / 1_000_000_000_000).toFixed(3)}\tTB`;
            }
        }

        function showPrompt(func) {
            $.confirm({
                theme: 'supervan',
                title: 'New user',
                content: '' +
                    '<form class="form-group">' +
                        '<input type="email" placeholder="User email" class="email form-control" required />' +
                        '<input type="text" placeholder="User password" class="password form-control" required />' +
                        '<label class="form-check-label" style="font-weight: bold; margin-right: 5px; margin-top: 4px;" for="admin_checkbox">' +
                        'Admin' +
                        '</label>' +
                        '<input class="is-admin form-check-input" id="admin_checkbox" type="checkbox" style="margin-top: 8px;" value="" />' +
                    '</form>',
                buttons: {
                    formSubmit: {
                        text: 'Confirm',
                        btnClass: 'btn-blue',
                        action: async function () {
                            let email = this.$content.find('.email').val();
                            let password = this.$content.find('.password').val();

                            if (!email || !password) {
                                $.alert('Fill credentials');
                                return false;
                            }

                            const isAdmin = document.getElementById("admin_checkbox").checked;

                            fetch("/api/users/admin/createUser", {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                    'Authorization': localStorage.getItem("token"),
                                },
                                body: JSON.stringify({
                                    email: email,
                                    password: password,
                                    isAdmin: isAdmin
                                })
                            }).then(res => {
                                if (res.status === 200) {
                                    showToast("Creation successful! Refresh to see changes");
                                    func(email);
                                } else {
                                    $.alert("Credentials already in use");
                                }
                            }).catch();
                        }
                    },
                    cancel: {
                        text: 'Cancel',
                    }
                },
                onContentReady: function () {
                    // bind to events
                    let jc = this;
                    this.$content.find('form').on('submit', function (e) {
                        // if the user submits the form by pressing enter in the field.
                        e.preventDefault();
                        jc.$$formSubmit.trigger('click'); // reference the button and click it
                    });
                }
            });
        }

        function showToast(msg) {
            const messageElement = document.getElementById("err_toast_msg");

            messageElement.innerText = msg;

            $(document).ready(function() {
                $(".toast").toast('show');
            });
        }

        function hideToast() {
            $(document).ready(function() {
                $(".toast").toast('hide');
            });
        }

        function addUser() {
            showPrompt((email) => {
            });
        }

        function banUser(email) {
            const btn = document.getElementById(`ban-${email}`);
            const isBanned = btn.innerText === "Ban";

            fetch("/api/users/admin/setUserBanStatus", {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': localStorage.getItem("token"),
                },
                body: JSON.stringify({
                    email: email,
                    isBanned: isBanned
                })
            }).then(r => {
                if (r.status === 200) {
                    btn.innerText = isBanned ? "Unban" : "Ban";
                } else {
                    showToast("Couldn't ban user");
                }
            }).catch();
        }

        const data = [];

        <% for (const userInfo of users) {%>
            data.push({
                user_email: `<%= userInfo.user.user_email %>`,
                is_admin: `<%= userInfo.user.is_admin %>`,
                joined_at: `<%= userInfo.user.joined_at.getTime() %>`,
                bytes: `<%= userInfo.stats.bytes %>`,
                millis: `<%= userInfo.stats.millis %>`,
                execCount: `<%= userInfo.stats.execCount %>`,
                is_banned: {
                    isBanned: `<%= userInfo.user.is_banned %>` === "true",
                    email: `<%= userInfo.user.user_email %>`,
                    noBan: `<%= userInfo.user.is_super %>` === "true" || `<%= userInfo.user.email === sender.user_email %>` === "true"
                }
            });
        <%}%>

        new DataTable('#table', {
                data: data,
                columns: [
                    { data: 'user_email', title: 'Email' },
                    { data: 'is_admin', title: 'Admin', searchable: false },
                    { data: 'joined_at', title: 'Join Date (dd/mm/yyyy)', type: 'numeric',
                        render: (date, type) => {
                            if (type !== 'display') {
                                return date;
                            }

                            return new Date(parseInt(date)).toLocaleDateString('en-GB');
                        }
                    },
                    { data: 'bytes', type: 'numeric', title: 'Mem Usage', searchable: false,
                        render: (bytes, type) => {
                            if (type !== 'display') {
                                return parseInt(bytes);
                            }

                            return getMemUnit(bytes);
                        }
                    },
                    { data: 'millis', title: 'Time Usage', type: 'numeric', searchable: false,
                        render: (millis, type) => {
                            if (type !== 'display') {
                                return parseInt(millis);
                            }

                            return (millis / 1000).toFixed(3) + " s";
                        }
                    },
                    { data: 'execCount', title: 'Execs' },
                    { data: 'is_banned', title: 'Change Status', searchable: false,
                        render: (info) => {
                            return `<button id="ban-${info.email}" onclick="banUser('${info.email}')" style="min-width: 3rem;" ${info.noBan ? "disabled" : ""} class="btn btn-danger">${info.isBanned ? "Unban" : "Ban"}</button>`;
                        }
                    }
                ],
                processing: true,
                responsive: true
            });
    </script>
</body>
</html>
